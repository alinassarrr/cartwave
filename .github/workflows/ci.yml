name: CI - Test Laravel and React

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test-frontend:
    name: Test React Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install React dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Check React app builds successfully
        run: |
          cd frontend
          npm run build
          echo "âœ… React app builds successfully!"
  
  test-backend:
    name: Test Laravel Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, pdo
      
      - name: Install Laravel dependencies
        run: |
          cd backend
          composer install --no-interaction --prefer-dist
      
      - name: Copy Laravel environment file
        run: |
          cd backend
          cp .env.example .env || echo "APP_KEY=" > .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=:memory:" >> .env
      
      - name: Generate Laravel application key
        run: |
          cd backend
          php artisan key:generate
      
      - name: Test Laravel application
        run: |
          cd backend
          php artisan --version
          php artisan config:cache
          echo "âœ… Laravel app is working!"
  
  integration-test:
    name: Test Integration
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Test Docker builds
        run: |
          echo "Testing if Docker containers can be built..."
          
          # Test frontend Docker build
          cd frontend
          docker build -t test-frontend .
          echo "âœ… Frontend Docker build successful!"
          
          # Test backend Docker build
          cd ../backend
          docker build -t test-backend .
          echo "âœ… Backend Docker build successful!"
          
          echo "ðŸŽ‰ All tests passed! Safe to pull to dev branch."
